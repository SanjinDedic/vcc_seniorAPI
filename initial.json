{
  "questions": [
    {
      "title": "Turtle Polygon",
      "content": "\n```python\nimport turtle\n\nt = turtle.Turtle()\n\nfor i in range(6):\n    t.forward(100)\n    t.right(60)\n\n# What shape will be drawn by this turtle program?\n```\n\nPredict the shape drawn by the turtle:",
      "answer": "b",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 1,
      "option_a": "A square",
      "option_b": "A hexagon",
      "option_c": "A pentagon",
      "option_d": "An octagon",
      "option_e": "A triangle",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Whoa, what's this?",
      "content": "\n```python\nimport turtle\n\nt = turtle.Turtle()\nt.speed(0)\n\nfor i in range(36):\n    t.forward(10)\n    t.circle(100)\n    t.right(10)\n```\n\nPredict the shape drawn by the turtle:",
      "answer": "f",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 2,
      "option_a": "A single circle",
      "option_b": "A square",
      "option_c": "A flower-like pattern",
      "option_d": "A spiral",
      "option_e": "A star",
      "option_f": "A donut",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "The condition of my condition",
      "content": "What will this python program print?\n\n```python\nx, y, z = 10, 10, 5\n\nif x > y and y > z:\n    print('A')\nelif x >= y and y > z:\n    print('B')\nelif x == y and y != z:\n    print('C')\nelif x + y > z:\n    print('D')\nelse:\n    print('E')\n```",
      "answer": "b",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 3,
      "option_a": "A",
      "option_b": "B",
      "option_c": "C",
      "option_d": "D",
      "option_e": "B,C and D",
      "option_f": "B, C, D and E",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "String and Integer Operations with Error (UPDATE OPTIONS DISPLAY TO MD)",
      "content": "Consider the following Python code:\n\n```python\nx = '10'\ny = 5\nz = 2\n\nprint('A' + x * y)\nprint('B' + str(int(x) + y))\nprint('C' + x * z)\nprint('D' + str(z * int(x)))\nprint('E' + x + y)\nprint('F' + z * x)\n```\nWhich of these print statements will cause a TypeError: can only concatenate str (not \"int\") to str?",
      "answer": "e",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 4,
      "option_a": "```python\nprint('A' + x * y)\n```",
      "option_b": "```python\nprint('B' + str(int(x) + y))\n```",
      "option_c": "```python\nprint('C' + x * z)\n```",
      "option_d": "```python\nprint('D' + str(z * int(x)))\n```",
      "option_e": "```python\nprint('E' + x + y)\n```",
      "option_f": "```python\nprint('F' + z * x)\n```",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "I have fruits in my Dictionary (UPDATE OPTIONS DISPLAY TO MD)",
      "content": "\n```python\nfruit_basket = {'apple': 3, 'banana': 2, 'orange': 4, 'pear': 1}\n\nfruit_basket['banana'] += 2\nfruit_basket.pop('pear')\n\nprint(fruit_basket)\n```\n\nWhat will be the output of this program?",
      "answer": "c",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 5,
      "option_a": "```python\n{'apple': 3, 'banana': 2, 'orange': 4}\n```",
      "option_b": "```python\n{'apple': 3, 'banana': 4, 'orange': 4, 'pear': 1}\n```",
      "option_c": "```python\n{'apple': 3, 'banana': 4, 'orange': 4}\n```",
      "option_d": "```python\n{'apple': 3, 'banana': 2, 'orange': 4, 'pear': 1}\n```",
      "option_e": "```python\n{'apple': 3, 'orange': 4}",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Stringing me along (UPDATE OPTIONS DISPLAY TO MD)",
      "content": "\n```python\ntext = \"Python programming is fun and educational\"\n\nwords = text.lower().split()\n\nlong_words = [word for word in words if len(word) > 5]\n\nprint(long_words)\n```\n\nWhat will be the output of this program?",
      "answer": "b",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 6,
      "option_a": "```python\n['python', 'programming']\n```",
      "option_b": "```python\n['python', 'programming', 'educational']\n```",
      "option_c": "```python\n['python', 'programming', 'fun', 'educational']\n```",
      "option_d": "```python\n['programming', 'educational']\n```",
      "option_e": "```python\n['python', 'programming', 'is', 'fun', 'and', 'educational']\n```",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Ready Set Go!",
      "content": "\n```python\nset1 = {1, 2, 3, 4, 5}\nset2 = {4, 5, 6, 7, 8}\n\n# Perform set operations\nunion_set = set1.union(set2)\nintersection_set = set1.intersection(set2)\ndifference_set = set1.difference(set2)\n\nresult = len(union_set) + len(intersection_set) + len(difference_set)\n\nprint(result)\n```\n\nWhat will be the output of this program?",
      "answer": "d",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 7,
      "option_a": "13",
      "option_b": "14",
      "option_c": "15",
      "option_d": "16",
      "option_e": "17",
      "option_f": "18",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Python Lambda Functions",
      "content": "```python\nadd = lambda x, y: x + y\nprint(add(3, 5))\n```\n\nWhat is the output of this program?",
      "answer": "a",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 8,
      "option_a": "8",
      "option_b": "3, 5",
      "option_c": "add(3, 5)",
      "option_d": "lambda x, y: x + y",
      "option_e": "3 + 5",
      "option_f": "An error occurs.",
      "option_g": "3",
      "option_h": "5",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "List Comprehension Math Comprehension",
      "content": "\n```python\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nresult = [n**2 for n in numbers if n % 2 == 0]\n\nprint(result)\n```\n\nWhat will be the output of this program?",
      "answer": "b",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 9,
      "option_a": "Every second number between 1 and 10: 2, 4, 6, . . .",
      "option_b": "Squares of even numbers between 1 and 10: 4, 16, 36, . . .",
      "option_c": "Squares of all numbers between 1 and 10: 1, 4, 9, . . .",
      "option_d": "Double of even numbers between 1 and 10: 4, 8, 12, . . .",
      "option_e": "Cubes of even numbers between 1 and 10: 8, 64, 216, . . .",
      "option_f": "An empty list: []",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Weather API",
      "content": "\n```python\nimport requests\n\napi_key = \"your_api_key\"\ncity = \"London\"\nurl = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric\"\n\nresponse = requests.get(url)\ndata = response.json()\n\ntemperature = data['main']['temp']\n\nif temperature < 10:\n    print(f\"It's cold in {city} with {temperature}°C\")\nelif 10 <= temperature < 20:\n    print(f\"It's mild in {city} with {temperature}°C\")\nelse:\n    print(f\"It's warm in {city} with {temperature}°C\")\n```\n\nWhat does this API call and code do?",
      "answer": "b",
      "original_points": 75,
      "type": "mcqs",
      "question_group": 10,
      "option_a": "Prints the current weather description for London",
      "option_b": "Categorizes and prints London's temperature as cold, mild, or warm",
      "option_c": "Displays the wind speed and direction in London",
      "option_d": "Shows the probability of precipitation in London",
      "option_e": "Retrieves and prints the air quality index for London",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Random User API",
      "content": "\n```python\nimport requests\n\nurl = \"https://api.randomuser.me/\"\n\nresponse = requests.get(url)\ndata = response.json()\n\nuser = data['results'][0]\nname = f\"{user['name']['first']} {user['name']['last']}\"\ngender = user['gender']\nage = user['dob']['age']\n\nif gender == 'male':\n    question = \"What's your Discord handle?\" if age < 18 else \"What's your favorite craft beer?\"\nelse:\n    question = \"Are you into Taylor Swift?\" if age < 18 else \"What's your go-to brunch spot?\"\n\nif age < 18:\n    greeting = f\"Hey {name}! {question}\"\nelif 18 <= age < 60:\n    greeting = f\"What's up, {name}? {question}\"\nelse:\n    greeting = f\"Hello {name}! How's your gardening going?\"\n\nprint(greeting)\n```\n\nWhat does this code do?",
      "answer": "c",
      "original_points": 75,
      "type": "mcqs",
      "question_group": 11,
      "option_a": "Creates a playlist based on a user's age and gender",
      "option_b": "Generates a random social media profile",
      "option_c": "Generates a custom greeting with a question based on a random user's gender and age",
      "option_d": "Recommends a movie based on user preferences",
      "option_e": "Suggests a trending hashtag for the user to use",
      "image_link": "",
      "content_link": ""
    }, 
    {
      "title": "Dynamic Programming Challenge",
      "content": "Given a set of coin denominations [1, 5, 10, 25, 50] and a target amount of 7654 cents, write a Python function to find the minimum number of coins needed to make up that amount. What is this minimum number?\n\nHint: This is the coin change problem, which can be solved using dynamic programming or a greedy algorithm (which may not always give the optimal solution for all denomination sets, but works for this specific set).",
      "answer": "159",
      "original_points": 100,
      "type": "short answer",
      "question_group": 12,
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Text File Analysis",
      "content": "Analyze the provided text file 'book.txt' (contents of 'Pride and Prejudice' by Jane Austen) and determine the top 5 most frequent words (excluding common stop words like 'the', 'a', 'an', etc.). What is the 3rd most frequent word?\n\nHint: You can use various text processing techniques, such as regular expressions or natural language processing libraries.",
      "answer": "e",
      "original_points": 150,
      "type": "mcqs",
      "question_group": 13,
      "option_a": "Mr",
      "option_b": "Elizabeth",
      "option_c": "Bennet",
      "option_d": "Darcy",
      "option_e": "not",
      "option_f": "very",
      "option_g": "would",
      "option_h": "could",
      "image_link": "",
      "content_link": "/files/pride_and_prejudice.txt"
    },
    {
      "title": "Bitcoin Trillionaire",
      "content": "The program below is a simplified bitcoin exchange simulator.\n\nIf you select the **buy** option, you will be asked to enter a $ value of how much bitcoin to buy. What input can you enter to guarantee a balance of $1,000,000,000,000 (one trillion dollars) or more?\n\n[REPL link](https://replit.com/@YourUsername/btcTrillionaire#main.py)\n\n**HINT AVAILABLE**",
      "answer": "inf",
      "original_points": 150,
      "type": "short answer",
      "question_group": 14,
      "image_link": "",
      "content_link": "/files/bitcoin_trillionaire.py"
    },
    {
      "title": "Employees with High Salaries",
      "content": "From the 'employees.json' file, determine how many employees have a salary above $85,000. Provide the number of such employees.",
      "answer": "124",
      "original_points": 100,
      "type": "short answer",
      "question_group": 15,
      "image_link": "",
      "content_link": "/files/employee_data.json"
    }, 
    {
      "title": "The Rich Ones",
      "content": "Write down the first names in alphabetic order separated by commas of the highest earning person in each department. You can find the data in 'employees.json'.",
      "answer": "Alexander, Bella, Emma, Henry, Sebastian",
      "original_points": 100,
      "type": "short answer",
      "question_group": 15,
      "image_link": "",
      "content_link": "/files/employee_data.json"
    },
    {
      "title": "Which Department is the Richest?",
      "content": "Using the 'employees.json' file, calculate the average salary for each department. List the departments in order from highest average salary to lowest, separated by commas.",
      "answer": "Sales, IT, Operations, Marketing, HR",
      "original_points": 100,
      "type": "short answer",
      "question_group": 15,
      "image_link": "",
      "content_link": "/files/employee_data.json"
    },
    {
      "title": "Top Money Sender",
      "content": "From the CSV file recording play money transfers among eight friends, determine which player sent the highest total amount of money. **Part 2:** Calculate *to two decimal places* the total amount of money that this player sent. (ANSWER FORMAT: 'Bob sent 100.52')",
      "answer": "Helena sent 6302.87",
      "original_points": 100,
      "type": "short answer",
      "question_group": 16,
      "image_link": "",
      "content_link": "/files/transactions.csv"
    },
    {
      "title": "Most Transactions Between Players",
      "content": "Using the CSV file of play money transfers among eight friends, identify all pairs of players who had the highest number of transactions between them (regardless of direction). **Part 2:** Provide the names of the players with the most transactions (in alphabetical order so for example: Alice and Bob).", 
      "answer": "Helena and Zayn",
      "original_points": 100,
      "type": "short answer",
      "question_group": 16,
      "image_link": "",
      "content_link": "/files/transactions.csv"
    },
    {
      "title": "Mutable Default Arguments in Python",
      "content": "```python\ndef append_to_list(value, my_list=[]):\n    my_list.append(value)\n    return my_list\n\nprint(append_to_list(1))\nprint(append_to_list(2))\nprint(append_to_list(3))\n```\n\nWhat is the output of this program?",
      "answer": "b",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 17,
      "option_a": "[1]\n[2]\n[3]",
      "option_b": "[1]\n[1, 2]\n[1, 2, 3]",
      "option_c": "[1]\n[1]\n[1]",
      "option_d": "[1]\n[1, 2]\n[3]",
      "option_e": "[1]\n[2]\n[3]",
      "option_f": "An error occurs.",
      "option_g": "[1, 2, 3]",
      "option_h": "[3]",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Python Decorators",
      "content": "```python\ndef my_decorator(func):\n    def wrapper():\n        print('Something is happening before the function is called.')\n        func()\n        print('Something is happening after the function is called.')\n    return wrapper\n\ndef say_hello():\n    print('Hello!')\n\nsay_hello = my_decorator(say_hello)\nsay_hello()\n```\n\nWhat is the output of this program?",
      "answer": "b",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 18,
      "option_a": "Hello!",
      "option_b": "Something is happening before the function is called.\nHello!\nSomething is happening after the function is called.",
      "option_c": "Something is happening before the function is called.\nSomething is happening after the function is called.",
      "option_d": "An error occurs.",
      "option_e": "None",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Python Generators",
      "content": "```python\ndef fibonacci(n):\n    a, b = 0, 1\n    for _ in range(n):\n        yield a\n        a, b = b, a + b\n\nfor num in fibonacci(5):\n    print(num)\n```\n\nWhat is the output of this program?",
      "answer": "a",
      "original_points": 50,
      "type": "mcqs",
      "question_group": 19,
      "option_a": "0\n1\n1\n2\n3",
      "option_b": "0\n1\n1\n2\n3\n5",
      "option_c": "0\n1\n2\n3\n5",
      "option_d": "0\n1\n1\n3\n5",
      "option_e": "0\n1\n2\n3",
      "image_link": "",
      "content_link": ""
    },
    {
      "title": "Brightest Color in RGB Patch (SEE IF YOU CAN SHOW THE IMAGE IN THE QUESTION)",
      "content": "An image `color_patch.png` has been generated using the following code:\n\n```python\nimport numpy as np\nfrom PIL import Image\n\ndef generate_color_patch(width=20, height=20):\n    np.random.seed(42)  # Seed the random number generator for reproducibility\n    # Create a 3D array of random RGB values\n    rgb_array = np.random.randint(0, 256, (height, width, 3), dtype=np.uint8)\n    \n    # Create an image from the array\n    img = Image.fromarray(rgb_array, 'RGB')\n    \n    # Save the image\n    img.save('color_patch.png')\n    \n    print(\"Image saved as 'color_patch.png'\")\n\n# Generate the color patch\ngenerate_color_patch()\n```\n\n**Task:** Determine the brightest color in `color_patch.png`. The brightness of a color is defined as the maximum value among its R, G, and B components. Provide your answer as three integers separated by commas (R,G,B) representing the brightest color found in the image.\n\n**Hint Available**",
      "answer": "243, 255, 235",
      "original_points": 200,
      "type": "short answer",
      "question_group": 21,
      "image_link": "",
      "content_link": "/files/color_patch.png"
    },
    {
      "title": "Counting Text Files in a Zip Archive",
      "content": "You are provided with a zip file containing over 200 subfolders and more than 50 text files. Your task is to determine:\n\n1. How many text files are in the zip file?\n2. How many of these text files are not empty?\n\nYou can use any method, such as writing a program or manual inspection, to find the answers.\n\n*Hint:* You might find [this tutorial](https://www.tutorialspoint.com/file-searching-using-python) helpful.",
      "answer": "c",
      "original_points": 200,
      "type": "mcqs",
      "question_group": 21,
      "option_a": "Total text files: 250\nNon-empty text files: 200",
      "option_b": "Total text files: 50\nNon-empty text files: 25",
      "option_c": "Total text files: 60\nNon-empty text files: 42",
      "option_d": "Total text files: 72\nNon-empty text files: 60",
      "option_e": "Total text files: 100\nNon-empty text files: 50",
      "image_link": "",
      "content_link": "/files/archive.zip"
    }
  ]
}